name: Update package versions

on:
  workflow_dispatch:
  schedule:
    - cron: '45 */6 * * *'

jobs:
  main:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    container:
      image: 'registry.fedoraproject.org/fedora-minimal:latest'

    steps:
      - name: Prepare
        run: |
          microdnf -y install --nodocs --setopt=install_weak_deps=0 \
            git-core rpm-build curl perl-interpreter jq rpmdevtools copr-cli parallel tar gzip \
            python3-pip golang cargo findutils

      - name: Copr config
        env:
          COPR_CONF: ${{ secrets.COPR_CONFIG }}
        run: |
          mkdir -p ~/.config
          echo "$COPR_CONF" > ~/.config/copr

      - uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"

      # Check for AGS v3 stack updates specifically
      - name: Check AGS v3 Stack Updates
        run: |
          echo "Checking for AGS v3 stack updates..."
          
          # Update all Astal packages together (they share the same commit)
          ASTAL_LATEST=$(curl -s "https://api.github.com/repos/Aylur/astal/commits/main" | jq -r .sha)
          ASTAL_CURRENT=$(grep "^%global astal_commit" astal/astal.spec 2>/dev/null | awk '{print $3}' || echo "none")
          
          if [ "$ASTAL_LATEST" != "$ASTAL_CURRENT" ] && [ "$ASTAL_CURRENT" != "none" ]; then
            echo "Astal update available: ${ASTAL_LATEST:0:7}"
            
            # Update all Astal packages
            for pkg in astal astal-gtk4 astal-gjs astal-libs; do
              if [ -f "$pkg/update.sh" ]; then
                (cd "$pkg" && ./update.sh) || true
              fi
            done
          fi
          
          # Check AGS v3 separately
          if [ -f "aylurs-gtk-shell-v3/update.sh" ]; then
            (cd "aylurs-gtk-shell-v3" && ./update.sh) || true
          fi
          
          # Check gtk4-layer-shell
          if [ -f "gtk4-layer-shell/update.sh" ]; then
            (cd "gtk4-layer-shell" && ./update.sh) || true
          fi

      # Run all other update scripts
      - name: Run update scripts
        run: |
          # First verify all update scripts are executable
          find . -name "update.sh" -exec chmod +x {} \;
          # Then run each update script
          find . -name "update.sh" -execdir {} \; || true
