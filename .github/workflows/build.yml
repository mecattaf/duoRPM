name: Build packages

on:
  workflow_dispatch:
  push:
    paths:
      - '**/*.spec'
      - '.copr/**'
      - '.github/**'

jobs:
  main:
    if: |
      github.event_name == 'workflow_dispatch' ||
      contains(github.event.head_commit.message, '[build-all]') ||
      contains(github.event.head_commit.message, '[build-go]') ||
      contains(github.event.head_commit.message, '[build-rust]') ||
      contains(github.event.head_commit.message, '[build-python]') ||
      contains(github.event.head_commit.message, '[build-gcc]') ||
      contains(github.event.head_commit.message, '[build-themes]') ||
      contains(github.event.head_commit.message, '[build-prebuilt]') ||
      contains(github.event.head_commit.message, '[build-wayland]')
    runs-on: ubuntu-latest
    container:
      image: 'registry.fedoraproject.org/fedora-minimal:latest'

    steps:
      - name: Prepare
        run: |
          microdnf -y install --nodocs --setopt=install_weak_deps=0 \
            copr-cli parallel tar gzip git

      - name: Copr config
        env:
          COPR_CONF: ${{ secrets.COPR_CONFIG }}
        run: |
          mkdir -p ~/.config
          echo "$COPR_CONF" > ~/.config/copr

      - uses: actions/checkout@v4

      # Build breakpad first (dependency for quickshell)
      - name: Build breakpad (dependency)
        if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[build-all]') || contains(github.event.head_commit.message, '[build-gcc]') || contains(github.event.head_commit.message, '[build-wayland]')
        run: |
          breakpad_build_id=$(copr-cli build-package mecattaf/duoRPM --nowait --name breakpad 2>/dev/null | grep -o 'builds: [0-9]*' | cut -d' ' -f2 || echo "0")
          echo "BREAKPAD_BUILD_ID=$breakpad_build_id" >> $GITHUB_ENV

      # Build wayland components with breakpad dependency
      - name: Build wayland components
        if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[build-all]') || contains(github.event.head_commit.message, '[build-wayland]') || contains(github.event.head_commit.message, '[build-gcc]')
        run: |
          # First build wayland
          wayland_build_id=$(copr-cli build-package mecattaf/duoRPM --nowait --name wayland 2>/dev/null | grep -o 'builds: [0-9]*' | cut -d' ' -f2 || echo "0")
          echo "WAYLAND_BUILD_ID=$wayland_build_id" >> $GITHUB_ENV
          
          # Then build wlroots after wayland
          if [ "$wayland_build_id" != "0" ]; then
            wlroots_build_id=$(copr-cli build-package mecattaf/duoRPM --nowait --name wlroots --after-build-id "$wayland_build_id" 2>/dev/null | grep -o 'builds: [0-9]*' | cut -d' ' -f2 || echo "0")
          else
            wlroots_build_id=$(copr-cli build-package mecattaf/duoRPM --nowait --name wlroots 2>/dev/null | grep -o 'builds: [0-9]*' | cut -d' ' -f2 || echo "0")
          fi
          echo "WLROOTS_BUILD_ID=$wlroots_build_id" >> $GITHUB_ENV

          # Build quickshell after both wlroots and breakpad
          dependencies=""
          if [ "$wlroots_build_id" != "0" ] && [ "$BREAKPAD_BUILD_ID" != "0" ]; then
            # Wait for both dependencies
            dependencies="--after-build-id $wlroots_build_id,$BREAKPAD_BUILD_ID"
          elif [ "$wlroots_build_id" != "0" ]; then
            dependencies="--after-build-id $wlroots_build_id"
          elif [ "$BREAKPAD_BUILD_ID" != "0" ]; then
            dependencies="--after-build-id $BREAKPAD_BUILD_ID"
          fi
          
          if [ -n "$dependencies" ]; then
            quickshell_build_id=$(copr-cli build-package mecattaf/duoRPM --nowait --name quickshell $dependencies 2>/dev/null | grep -o 'builds: [0-9]*' | cut -d' ' -f2 || echo "0")
          else
            quickshell_build_id=$(copr-cli build-package mecattaf/duoRPM --nowait --name quickshell 2>/dev/null | grep -o 'builds: [0-9]*' | cut -d' ' -f2 || echo "0")
          fi
          echo "QUICKSHELL_BUILD_ID=$quickshell_build_id" >> $GITHUB_ENV

      # Prevent race conditions by starting with xcur2png
      - name: Build xcur2png first (dependency)
        if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[build-all]') || contains(github.event.head_commit.message, '[build-go]')
        run: |
          xcur2png_build_id=$(copr-cli build-package mecattaf/duoRPM --nowait --name xcur2png 2>/dev/null | grep -o 'builds: [0-9]*' | cut -d' ' -f2 || echo "0")
          echo "XCUR2PNG_BUILD_ID=$xcur2png_build_id" >> $GITHUB_ENV

      # Build cliphist second (dependency for nwg-clipman)
      - name: Build cliphist (dependency)
        if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[build-all]') || contains(github.event.head_commit.message, '[build-go]')
        run: |
          cliphist_build_id=$(copr-cli build-package mecattaf/duoRPM --nowait --name cliphist 2>/dev/null | grep -o 'builds: [0-9]*' | cut -d' ' -f2 || echo "0")
          echo "CLIPHIST_BUILD_ID=$cliphist_build_id" >> $GITHUB_ENV

      # Build GCC packages (lisgd, scroll)
      - name: Build GCC packages
        if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[build-all]') || contains(github.event.head_commit.message, '[build-gcc]')
        run: |
          copr-cli build-package mecattaf/duoRPM --nowait --name lisgd 2>/dev/null || true
          if [ "$WLROOTS_BUILD_ID" != "0" ]; then
            copr-cli build-package mecattaf/duoRPM --nowait --name scroll --after-build-id "$WLROOTS_BUILD_ID" 2>/dev/null || true
          else
            copr-cli build-package mecattaf/duoRPM --nowait --name scroll 2>/dev/null || true
          fi
    
      # Build remaining Go packages (nwg-look) that depend on xcur2png
      - name: Build Go packages
        if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[build-all]') || contains(github.event.head_commit.message, '[build-go]')
        run: |
          # Build nwg-look after xcur2png
          if [ "$XCUR2PNG_BUILD_ID" != "0" ]; then
            copr-cli build-package mecattaf/duoRPM --nowait --name nwg-look --after-build-id "$XCUR2PNG_BUILD_ID" 2>/dev/null || true
          else
            copr-cli build-package mecattaf/duoRPM --nowait --name nwg-look 2>/dev/null || true
          fi

      # Build Rust packages
      - name: Build Rust packages
        if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[build-all]') || contains(github.event.head_commit.message, '[build-rust]')
        run: |
          copr-cli build-package mecattaf/duoRPM --nowait --name wl-gammarelay-rs 2>/dev/null || true
          copr-cli build-package mecattaf/duoRPM --nowait --name matugen 2>/dev/null || true

      # Build Python packages with dependencies
      - name: Build Python packages
        if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[build-all]') || contains(github.event.head_commit.message, '[build-python]')
        run: |
          copr-cli build-package mecattaf/duoRPM --nowait --name python-autotiling 2>/dev/null || true
          if [ "$CLIPHIST_BUILD_ID" != "0" ]; then
            copr-cli build-package mecattaf/duoRPM --nowait --name nwg-clipman --after-build-id "$CLIPHIST_BUILD_ID" 2>/dev/null || true
          else
            copr-cli build-package mecattaf/duoRPM --nowait --name nwg-clipman 2>/dev/null || true
          fi

      # Build theme packages
      - name: Build theme packages
        if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[build-all]') || contains(github.event.head_commit.message, '[build-themes]')
        run: |
          parallel copr-cli build-package mecattaf/duoRPM --nowait --name ::: \
            bibata-cursor-themes catppuccin-extras 2>/dev/null || true

      # Build prebuilt packages (atuin, eza, starship)
      - name: Build prebuilt packages
        if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[build-all]') || contains(github.event.head_commit.message, '[build-prebuilt]')
        run: |
          # Build each prebuilt package independently since they tend to have specific issues
          copr-cli build-package mecattaf/duoRPM --nowait --name atuin 2>/dev/null || true
          copr-cli build-package mecattaf/duoRPM --nowait --name eza 2>/dev/null || true
          copr-cli build-package mecattaf/duoRPM --nowait --name starship 2>/dev/null || true

      # Check build status (fixed version)
      - name: Check build status
        if: always()
        run: |
          sleep 60  # Give COPR more time to register all builds
          echo "=== Build Status Summary ==="
          copr-cli list-builds mecattaf/duoRPM --output-format text-row | head -30
